{%- set service_name = os.filename.split('.')[0] %}

{%- if not service_name in env.apps %}
  {{ 0/0 }} # Please add this deployment to apps list
{%- endif %}

{%- set app = env.apps[service_name] %}
{%- if app.get('deploy', false) %}
{%- if 'ingress' in env.apps[service_name] %}

{%- set ingress = env.apps[service_name].ingress %}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "{{ service_name }}-ingress"
  namespace: "{{ env.k8s.apps.namespace }}"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    {%- if ingress.rewrite_target is defined %}
    nginx.ingress.kubernetes.io/rewrite-target: "{{ ingress.rewrite_target }}"
    {%- endif %}
spec:
  rules:
  {%- for domain, route in ingress.routes.items() %}
  - host: "{{ domain }}"
    http:
      paths:
      {%- for path in route.paths %}
        - backend:
            serviceName: "{{ path.get('to_service', service_name) }}-service"
            servicePort: {{ path.port }}
          {%- if 'path' in path %}
          path: "{{ path.path }}"
          {%- endif %}
      {%- endfor %}
      {%- if env.apps[service_name].get('docs', false) %}
        - path: /docs
          backend:
            serviceName: "{{ service_name }}-service"
            servicePort: 8086
        - path: /swagger.json
          backend:
            serviceName: "{{ service_name }}-service"
            servicePort: 8086
      {%- endif %}
  {%- endfor %}
  tls:
  - hosts:
  {%- for domain, _ in ingress.routes.items() %}
      - "{{ domain }}"
  {%- endfor %}
    secretName: "{{ service_name }}-certs"

{%- endif %}
{%- endif %}
